{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./NewsFetcher.css';// Constants\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const apiKey='eebb1b338a084392ae9dda14e487d1c8';const pageSize=10;const NewsFetcher=()=>{// State hooks for managing category, articles, current page, and total results\nconst[category,setCategory]=useState('general');const[articles,setArticles]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[totalResults,setTotalResults]=useState(0);const[error,setError]=useState(null);// Function to fetch news articles\nconst getNews=async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;const url=\"https://newsapi.org/v2/top-headlines?category=\".concat(category,\"&language=en&page=\").concat(page,\"&pageSize=\").concat(pageSize,\"&apiKey=\").concat(apiKey);try{const response=await fetch(url);if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const data=await response.json();setArticles(data.articles);setTotalResults(data.totalResults);setError(null);}catch(error){console.error('Failed to fetch news article:',error);setError('Failed to fetch news article.');}};// Fetch news articles whenever the category or current page changes\nuseEffect(()=>{getNews(currentPage);},[category,currentPage]);// Function to handle category change\nconst handleCategoryChange=event=>{setCategory(event.target.value);setCurrentPage(1);};// Function to render pagination buttons\nconst renderPagination=()=>{const totalPages=Math.ceil(totalResults/pageSize);const buttons=[];for(let i=1;i<=totalPages;i++){buttons.push(/*#__PURE__*/_jsx(\"button\",{className:\"page-button \".concat(i===currentPage?'active':''),onClick:()=>{setCurrentPage(i);},children:i},i));}return buttons;};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Fetch News Articles\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"newscategory\",children:\"Select Category:\"}),/*#__PURE__*/_jsxs(\"select\",{class:\"category\",id:\"newscategory\",value:category,onChange:handleCategoryChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"business\",children:\"Business\"}),/*#__PURE__*/_jsx(\"option\",{value:\"entertainment\",children:\"Entertainment\"}),/*#__PURE__*/_jsx(\"option\",{value:\"general\",children:\"General\"}),/*#__PURE__*/_jsx(\"option\",{value:\"health\",children:\"Health\"}),/*#__PURE__*/_jsx(\"option\",{value:\"science\",children:\"Science\"}),/*#__PURE__*/_jsx(\"option\",{value:\"sports\",children:\"Sports\"}),/*#__PURE__*/_jsx(\"option\",{value:\"technology\",children:\"Technology\"})]}),/*#__PURE__*/_jsx(\"button\",{class:\"News\",onClick:()=>getNews(),children:\"Get News\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"newsDisplay\",children:[error&&/*#__PURE__*/_jsx(\"p\",{children:error}),articles.map((article,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"news-article\",children:[/*#__PURE__*/_jsx(\"h2\",{children:article.title}),article.urlToImage&&/*#__PURE__*/_jsx(\"img\",{src:article.urlToImage,alt:article.title,style:{maxWidth:'100%'}}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Source:\"}),\" \",article.source.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Published at:\"}),\" \",new Date(article.publishedAt).toLocaleString()]}),/*#__PURE__*/_jsx(\"p\",{children:article.description}),/*#__PURE__*/_jsx(\"a\",{href:article.url,target:\"_blank\",rel:\"noopener noreferrer\",children:\"Read more\"})]},index))]}),/*#__PURE__*/_jsx(\"div\",{id:\"pagination\",children:renderPagination()})]});};export default NewsFetcher;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","apiKey","pageSize","NewsFetcher","category","setCategory","articles","setArticles","currentPage","setCurrentPage","totalResults","setTotalResults","error","setError","getNews","page","arguments","length","undefined","url","concat","response","fetch","ok","Error","status","data","json","console","handleCategoryChange","event","target","value","renderPagination","totalPages","Math","ceil","buttons","i","push","className","onClick","children","htmlFor","class","id","onChange","map","article","index","title","urlToImage","src","alt","style","maxWidth","source","name","Date","publishedAt","toLocaleString","description","href","rel"],"sources":["D:/Project -By Padma/News API/news-fetcher/src/NewsFetcher.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './NewsFetcher.css';\r\n\r\n// Constants\r\nconst apiKey = 'eebb1b338a084392ae9dda14e487d1c8';\r\nconst pageSize = 10;\r\n\r\nconst NewsFetcher = () => {\r\n  // State hooks for managing category, articles, current page, and total results\r\n  const [category, setCategory] = useState('general');\r\n  const [articles, setArticles] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalResults, setTotalResults] = useState(0);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Function to fetch news articles\r\n  const getNews = async (page = 1) => {\r\n    const url = `https://newsapi.org/v2/top-headlines?category=${category}&language=en&page=${page}&pageSize=${pageSize}&apiKey=${apiKey}`;\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setArticles(data.articles);\r\n      setTotalResults(data.totalResults);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Failed to fetch news article:', error);\r\n      setError('Failed to fetch news article.');\r\n    }\r\n  };\r\n\r\n  // Fetch news articles whenever the category or current page changes\r\n  useEffect(() => {\r\n    getNews(currentPage);\r\n  }, [category, currentPage]);\r\n\r\n  // Function to handle category change\r\n  const handleCategoryChange = (event) => {\r\n    setCategory(event.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // Function to render pagination buttons\r\n  const renderPagination = () => {\r\n    const totalPages = Math.ceil(totalResults / pageSize);\r\n    const buttons = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      buttons.push(\r\n        <button\r\n          key={i}\r\n          className={`page-button ${i === currentPage ? 'active' : ''}`}\r\n          onClick={() => {\r\n            setCurrentPage(i);\r\n          }}\r\n        >\r\n          {i}\r\n        </button>\r\n      );\r\n    }\r\n    return buttons;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Fetch News Articles</h1>\r\n      <label htmlFor=\"newscategory\">Select Category:</label>\r\n      <select class=\"category\" id=\"newscategory\" value={category} onChange={handleCategoryChange}>\r\n        <option value=\"business\">Business</option>\r\n        <option value=\"entertainment\">Entertainment</option>\r\n        <option value=\"general\">General</option>\r\n        <option value=\"health\">Health</option>\r\n        <option value=\"science\">Science</option>\r\n        <option value=\"sports\">Sports</option>\r\n        <option value=\"technology\">Technology</option>\r\n      </select>\r\n      <button class=\"News\" onClick={() => getNews()}>Get News</button>\r\n      <div id=\"newsDisplay\">\r\n        {error && <p>{error}</p>}\r\n        {articles.map((article, index) => (\r\n          <div key={index} className=\"news-article\">\r\n            <h2>{article.title}</h2>\r\n            {article.urlToImage && <img src={article.urlToImage} alt={article.title} style={{ maxWidth: '100%' }} />}\r\n            <p><strong>Source:</strong> {article.source.name}</p>\r\n            <p><strong>Published at:</strong> {new Date(article.publishedAt).toLocaleString()}</p>\r\n            <p>{article.description}</p>\r\n            <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">Read more</a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div id=\"pagination\">\r\n        {renderPagination()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsFetcher;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}